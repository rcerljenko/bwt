name: CMake CI

on:
 pull_request:
  types: [opened, synchronize, reopened, ready_for_review]

concurrency:
 group: ${{ github.ref }}
 cancel-in-progress: true

jobs:
 linux:
  if: github.event.pull_request.draft == false

  runs-on: ubuntu-latest

  name: Linux

  steps:
   - name: Pulling project
     uses: actions/checkout@v4

   - name: Setup cache
     uses: actions/cache@v4
     with:
      path: ./src/build
      key: ${{ runner.os }}-cmake-${{ hashFiles('./src/CMakeLists.txt', './src/libbwt/CMakeLists.txt') }}
      restore-keys: ${{ runner.os }}-cmake-

   - name: Setup CMake
     id: cmake
     uses: threeal/cmake-action@v2
     with:
      source-dir: src

   - name: Install
     run: sudo cmake --install ${{ steps.cmake.outputs.build-dir }}

   - name: Run program
     run: pbwt -h

   - name: Prepare for tests
     run: tar -c -f ${{ runner.temp }}/bwt.tar .

   - name: Compression test using FILE
     working-directory: ${{ runner.temp }}
     run: pbwt -p 9 bwt.tar -o bwt-file.tar.bwt

   - name: Compression test using STDIN
     working-directory: ${{ runner.temp }}
     run: cat bwt.tar | pbwt -p 9 -o bwt-stdin.tar.bwt

   - name: Compression test using STDOUT
     working-directory: ${{ runner.temp }}
     run: pbwt -p 9 -c bwt.tar > bwt-stdout.tar.bwt

   - name: Decompression test using FILE
     working-directory: ${{ runner.temp }}
     run: pbwt -d bwt-file.tar.bwt -o bwt-file.tar

   - name: Decompression test using STDIN file
     working-directory: ${{ runner.temp }}
     run: pbwt -d bwt-stdin.tar.bwt -o bwt-stdin.tar

   - name: Decompression test using STDOUT file
     working-directory: ${{ runner.temp }}
     run: pbwt -d bwt-stdout.tar.bwt -o bwt-stdout.tar

   - name: Compare decompressed files 1/3
     working-directory: ${{ runner.temp }}
     run: cmp -s bwt.tar bwt-file.tar

   - name: Compare decompressed files 2/3
     working-directory: ${{ runner.temp }}
     run: cmp -s bwt.tar bwt-stdin.tar

   - name: Compare decompressed files 3/3
     working-directory: ${{ runner.temp }}
     run: cmp -s bwt.tar bwt-stdout.tar

 macos:
  if: github.event.pull_request.draft == false

  runs-on: macos-latest

  name: MacOS

  steps:
   - name: Pulling project
     uses: actions/checkout@v4

   - name: Setup cache
     uses: actions/cache@v4
     with:
      path: ./src/build
      key: ${{ runner.os }}-cmake-${{ hashFiles('./src/CMakeLists.txt', './src/libbwt/CMakeLists.txt') }}
      restore-keys: ${{ runner.os }}-cmake-

   - name: Setup CMake
     id: cmake
     env:
      CC: gcc-14
      CXX: g++-14
     uses: threeal/cmake-action@v2
     with:
      source-dir: src

   - name: Install
     run: sudo cmake --install ${{ steps.cmake.outputs.build-dir }}

   - name: Run program
     run: pbwt -h

   - name: Prepare for tests
     run: tar -c -f ${{ HOME }}/bwt.tar .

   - name: Compression test using FILE
     working-directory: ${{ HOME }}
     run: pbwt -p 9 bwt.tar -o bwt-file.tar.bwt

   - name: Compression test using STDIN
     working-directory: ${{ HOME }}
     run: cat bwt.tar | pbwt -p 9 -o bwt-stdin.tar.bwt

   - name: Compression test using STDOUT
     working-directory: ${{ HOME }}
     run: pbwt -p 9 -c bwt.tar > bwt-stdout.tar.bwt

   - name: Decompression test using FILE
     working-directory: ${{ HOME }}
     run: pbwt -d bwt-file.tar.bwt -o bwt-file.tar

   - name: Decompression test using STDIN file
     working-directory: ${{ HOME }}
     run: pbwt -d bwt-stdin.tar.bwt -o bwt-stdin.tar

   - name: Decompression test using STDOUT file
     working-directory: ${{ HOME }}
     run: pbwt -d bwt-stdout.tar.bwt -o bwt-stdout.tar

   - name: Compare decompressed files 1/3
     working-directory: ${{ HOME }}
     run: cmp -s bwt.tar bwt-file.tar

   - name: Compare decompressed files 2/3
     working-directory: ${{ HOME }}
     run: cmp -s bwt.tar bwt-stdin.tar

   - name: Compare decompressed files 3/3
     working-directory: ${{ HOME }}
     run: cmp -s bwt.tar bwt-stdout.tar

 windows:
  if: github.event.pull_request.draft == false

  runs-on: windows-latest

  name: Windows

  steps:
   - name: Pulling project
     uses: actions/checkout@v4

   - name: Setup cache
     uses: actions/cache@v4
     with:
      path: ./src/build
      key: ${{ runner.os }}-cmake-${{ hashFiles('./src/CMakeLists.txt', './src/libbwt/CMakeLists.txt') }}
      restore-keys: ${{ runner.os }}-cmake-

   - name: Setup CMake
     id: cmake
     uses: threeal/cmake-action@v2
     with:
      source-dir: src
      build-args: --config Release

   - name: Install
     run: cmake --install ${{ steps.cmake.outputs.build-dir }} --config Release

   - name: Run program
     working-directory: 'C:/Program Files (x86)/libbwt/bin'
     run: ./pbwt -h

   - name: Prepare for tests
     run: 7z a -ttar -r ${{ runner.temp }}\bwt.tar .

   - name: Compression test using FILE
     working-directory: 'C:/Program Files (x86)/libbwt/bin'
     run: ./pbwt -p 9 ${{ runner.temp }}\bwt.tar -o ${{ runner.temp }}\bwt-file.tar.bwt

   - name: Compression test using STDIN
     working-directory: 'C:/Program Files (x86)/libbwt/bin'
     run: type ${{ runner.temp }}\bwt.tar | ./pbwt -p 9 -o ${{ runner.temp }}\bwt-stdin.tar.bwt

   - name: Compression test using STDOUT
     working-directory: 'C:/Program Files (x86)/libbwt/bin'
     run: ./pbwt -p 9 -c ${{ runner.temp }}\bwt.tar > ${{ runner.temp }}\bwt-stdout.tar.bwt

   - name: Decompression test using FILE
     working-directory: 'C:/Program Files (x86)/libbwt/bin'
     run: ./pbwt -d ${{ runner.temp }}\bwt-file.tar.bwt -o ${{ runner.temp }}\bwt-file.tar

   - name: Decompression test using STDIN file
     working-directory: 'C:/Program Files (x86)/libbwt/bin'
     run: ./pbwt -d ${{ runner.temp }}\bwt-stdin.tar.bwt -o ${{ runner.temp }}\bwt-stdin.tar

   - name: Compare decompressed files
     working-directory: ${{ runner.temp }}
     run: fc.exe /b bwt.tar bwt-file.tar
